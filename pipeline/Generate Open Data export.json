{
	"name": "Generate Open Data export",
	"properties": {
		"description": "Generates open data compatible exports for courses, venues and providers.",
		"activities": [
			{
				"name": "Generate Providers CSV",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Transform data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"wildcardFileName": "*.json",
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings",
							"copyBehavior": "MergeFiles"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".csv"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "$['ProviderUkprn']"
								},
								"sink": {
									"name": "PROVIDER_UKPRN",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['ProviderName']"
								},
								"sink": {
									"name": "PROVIDER_NAME",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['TradingName']"
								},
								"sink": {
									"name": "TRADING_NAME",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['ContactAddress1']"
								},
								"sink": {
									"name": "CONTACT_ADDRESS1",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['ContactAddress2']"
								},
								"sink": {
									"name": "CONTACT_ADDRESS2",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['ContactTown']"
								},
								"sink": {
									"name": "CONTACT_TOWN",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['ContactPostcode']"
								},
								"sink": {
									"name": "CONTACT_POSTCODE",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['ContactWebsite']"
								},
								"sink": {
									"name": "CONTACT_WEBSITE",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['ContactPhone']"
								},
								"sink": {
									"name": "CONTACT_PHONE",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['ContactEmail']"
								},
								"sink": {
									"name": "CONTACT_EMAIL",
									"type": "String"
								}
							}
						]
					}
				},
				"inputs": [
					{
						"referenceName": "openData_Cache_Providers",
						"type": "DatasetReference",
						"parameters": {
							"container": {
								"value": "@variables('container')",
								"type": "Expression"
							},
							"folder": {
								"value": "@variables('cacheFolder')",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "openData_Export_Providers",
						"type": "DatasetReference",
						"parameters": {
							"container": {
								"value": "@variables('container')",
								"type": "Expression"
							},
							"folder": {
								"value": "@variables('exportFolder')",
								"type": "Expression"
							},
							"filename": {
								"value": "@concat(formatDateTime(utcnow(), 'yyyy-MM-dd'), '-providers.csv')",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Copy Regions",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Purge backups",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "JsonWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "$['Id']"
								},
								"sink": {
									"path": "$['RegionId']"
								}
							},
							{
								"source": {
									"path": "$['SubRegionName']"
								},
								"sink": {
									"path": "$['SubRegionName']"
								}
							},
							{
								"source": {
									"path": "$['Latitude']"
								},
								"sink": {
									"path": "$['Latitude']"
								}
							},
							{
								"source": {
									"path": "$['Longitude']"
								},
								"sink": {
									"path": "$['Longitude']"
								}
							},
							{
								"source": {
									"path": "$['Postcode']"
								},
								"sink": {
									"path": "$['Postcode']"
								}
							}
						]
					}
				},
				"inputs": [
					{
						"referenceName": "sharedData_Regions",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "openData_Cache_Regions",
						"type": "DatasetReference",
						"parameters": {
							"container": {
								"value": "@variables('container')",
								"type": "Expression"
							},
							"folder": {
								"value": "@variables('cacheFolder')",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Generate Courses CSV",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Transform data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"wildcardFileName": "*.json",
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings",
							"copyBehavior": "MergeFiles"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".csv"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "$['ProviderUKPRN']"
								},
								"sink": {
									"name": "PROVIDER_UKPRN",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['CourseId']"
								},
								"sink": {
									"name": "COURSE_ID",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['LearnAimRef']"
								},
								"sink": {
									"name": "LEARN_AIM_REF",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['CourseName']"
								},
								"sink": {
									"name": "COURSE_NAME",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['CourseDescription']"
								},
								"sink": {
									"name": "COURSE_DESCRIPTION",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['DeliveryMode']"
								},
								"sink": {
									"name": "DELIVER_MODE",
									"type": "Int16"
								}
							},
							{
								"source": {
									"path": "$['FlexibleStartDate']"
								},
								"sink": {
									"name": "FLEXIBLE_STARTDATE",
									"type": "Boolean"
								}
							},
							{
								"source": {
									"path": "$['StartDate']"
								},
								"sink": {
									"name": "STARTDATE",
									"type": "DateTime",
									"format": "yyyy-MM-dd",
									"culture": "en-GB"
								}
							},
							{
								"source": {
									"path": "$['CourseURL']"
								},
								"sink": {
									"name": "COURSE_URL",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['Cost']"
								},
								"sink": {
									"name": "COST",
									"type": "Double"
								}
							},
							{
								"source": {
									"path": "$['CostDescription']"
								},
								"sink": {
									"name": "COST_DESCRIPTION",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['National']"
								},
								"sink": {
									"name": "NATIONAL",
									"type": "Boolean"
								}
							},
							{
								"source": {
									"path": "$['RegionsString']"
								},
								"sink": {
									"name": "REGIONS",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['VenueId']"
								},
								"sink": {
									"name": "VENUE_ID",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['DurationUnit']"
								},
								"sink": {
									"name": "DURATION_UNIT",
									"type": "Int16"
								}
							},
							{
								"source": {
									"path": "$['DurationValue']"
								},
								"sink": {
									"name": "DURATION_VALUE",
									"type": "Int32"
								}
							},
							{
								"source": {
									"path": "$['AttendancePattern']"
								},
								"sink": {
									"name": "ATTENDANCE_PATTERN",
									"type": "Int16"
								}
							},
							{
								"source": {
									"path": "$['UpdatedDate']"
								},
								"sink": {
									"name": "UPDATED_DATE",
									"type": "DateTime",
									"format": "yyyy-MM-dd",
									"culture": "en-GB"
								}
							}
						],
						"mapComplexValuesToString": true
					}
				},
				"inputs": [
					{
						"referenceName": "openData_Cache_Courses",
						"type": "DatasetReference",
						"parameters": {
							"container": {
								"value": "@variables('container')",
								"type": "Expression"
							},
							"folder": {
								"value": "@variables('cacheFolder')",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "openData_Export_Courses",
						"type": "DatasetReference",
						"parameters": {
							"container": {
								"value": "@variables('container')",
								"type": "Expression"
							},
							"folder": {
								"value": "@variables('exportFolder')",
								"type": "Expression"
							},
							"filename": {
								"value": "@concat(formatDateTime(utcnow(), 'yyyy-MM-dd'), '-courses.csv')",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Generate Venues CSV",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Transform data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"wildcardFileName": "*.json",
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings",
							"copyBehavior": "MergeFiles"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".csv"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "$['ProviderUkprn']"
								},
								"sink": {
									"name": "PROVIDER_UKPRN",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['VenueId']"
								},
								"sink": {
									"name": "LOCATION_ID",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['VenueName']"
								},
								"sink": {
									"name": "NAME",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['Address1']"
								},
								"sink": {
									"name": "ADDRESS1",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['Address2']"
								},
								"sink": {
									"name": "ADDRESS2",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['Town']"
								},
								"sink": {
									"name": "TOWN",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['County']"
								},
								"sink": {
									"name": "COUNTY",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['Postcode']"
								},
								"sink": {
									"name": "POSTCODE",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['Latitude']"
								},
								"sink": {
									"name": "LATITUDE",
									"type": "Double"
								}
							},
							{
								"source": {
									"path": "$['Longitude']"
								},
								"sink": {
									"name": "LONGITUDE",
									"type": "Double"
								}
							}
						],
						"collectionReference": ""
					}
				},
				"inputs": [
					{
						"referenceName": "openData_Cache_Venues",
						"type": "DatasetReference",
						"parameters": {
							"container": {
								"value": "@variables('container')",
								"type": "Expression"
							},
							"folder": {
								"value": "@variables('cacheFolder')",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "openData_Export_Venues",
						"type": "DatasetReference",
						"parameters": {
							"container": {
								"value": "@variables('container')",
								"type": "Expression"
							},
							"folder": {
								"value": "@variables('exportFolder')",
								"type": "Expression"
							},
							"filename": {
								"value": "@concat(formatDateTime(utcnow(), 'yyyy-MM-dd'), '-venues.csv')",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Generate Regions CSV",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Copy Regions",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".csv"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "$['RegionId']"
								},
								"sink": {
									"name": "REGION_ID",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['SubRegionName']"
								},
								"sink": {
									"name": "SUBREGION_NAME",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['Latitude']"
								},
								"sink": {
									"name": "LATITUDE",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['Longitude']"
								},
								"sink": {
									"name": "LONGITUDE",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['Postcode']"
								},
								"sink": {
									"name": "POSTCODE",
									"type": "String"
								}
							}
						]
					}
				},
				"inputs": [
					{
						"referenceName": "openData_Cache_Regions",
						"type": "DatasetReference",
						"parameters": {
							"container": {
								"value": "@variables('container')",
								"type": "Expression"
							},
							"folder": {
								"value": "@variables('cacheFolder')",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "openData_Export_Regions",
						"type": "DatasetReference",
						"parameters": {
							"container": {
								"value": "@variables('container')",
								"type": "Expression"
							},
							"folder": {
								"value": "@variables('exportFolder')",
								"type": "Expression"
							},
							"filename": {
								"value": "@concat(formatDateTime(utcnow(), 'yyyy-MM-dd'), '-regions.csv')",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Generate Courses with Venues CSV",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Transform data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"wildcardFileName": "*.json",
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings",
							"copyBehavior": "MergeFiles"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "$['ProviderUKPRN']"
								},
								"sink": {
									"name": "PROVIDER_UKPRN",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['CourseId']"
								},
								"sink": {
									"name": "COURSE_ID",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['LearnAimRef']"
								},
								"sink": {
									"name": "LEARN_AIM_REF",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['CourseName']"
								},
								"sink": {
									"name": "COURSE_NAME",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['CourseDescription']"
								},
								"sink": {
									"name": "COURSE_DESCRIPTION",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['DeliveryMode']"
								},
								"sink": {
									"name": "DELIVER_MODE",
									"type": "Int16"
								}
							},
							{
								"source": {
									"path": "$['AttendancePattern']"
								},
								"sink": {
									"name": "ATTENDANCE_PATTERN",
									"type": "Int16"
								}
							},
							{
								"source": {
									"path": "$['FlexibleStartDate']"
								},
								"sink": {
									"name": "FLEXIBLE_STARTDATE",
									"type": "Boolean"
								}
							},
							{
								"source": {
									"path": "$['StartDate']"
								},
								"sink": {
									"name": "STARTDATE",
									"type": "DateTime",
									"format": "yyyy-MM-dd",
									"culture": "en-GB"
								}
							},
							{
								"source": {
									"path": "$['DurationUnit']"
								},
								"sink": {
									"name": "DURATION_UNIT",
									"type": "Int16"
								}
							},
							{
								"source": {
									"path": "$['DurationValue']"
								},
								"sink": {
									"name": "DURATION_VALUE",
									"type": "Int32"
								}
							},
							{
								"source": {
									"path": "$['Cost']"
								},
								"sink": {
									"name": "COST",
									"type": "Double"
								}
							},
							{
								"source": {
									"path": "$['CostDescription']"
								},
								"sink": {
									"name": "COST_DESCRIPTION",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['National']"
								},
								"sink": {
									"name": "NATIONAL",
									"type": "Boolean"
								}
							},
							{
								"source": {
									"path": "$['RegionsString']"
								},
								"sink": {
									"name": "REGIONS",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['VenueName']"
								},
								"sink": {
									"name": "LOCATION_NAME",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['Address1']"
								},
								"sink": {
									"name": "LOCATION_ADDRESS1",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['Address2']"
								},
								"sink": {
									"name": "LOCATION_ADDRESS2",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['County']"
								},
								"sink": {
									"name": "LOCATION_COUNTY",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['Email']"
								},
								"sink": {
									"name": "LOCATION_EMAIL",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['Latitude']"
								},
								"sink": {
									"name": "LOCATION_LATITUDE",
									"type": "Double"
								}
							},
							{
								"source": {
									"path": "$['Longitude']"
								},
								"sink": {
									"name": "LOCATION_LONGITUDE",
									"type": "Double"
								}
							},
							{
								"source": {
									"path": "$['Postcode']"
								},
								"sink": {
									"name": "LOCATION_POSTCODE",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['Telephone']"
								},
								"sink": {
									"name": "LOCATION_TELEPHONE",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['Town']"
								},
								"sink": {
									"name": "LOCATION_TOWN",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['Website']"
								},
								"sink": {
									"name": "LOCATION_WEBSITE",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['CourseURL']"
								},
								"sink": {
									"name": "COURSE_URL",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['UpdatedDate']"
								},
								"sink": {
									"name": "UPDATED_DATE",
									"type": "DateTime",
									"format": "yyyy-MM-dd",
									"culture": "en-GB"
								}
							}
						],
						"collectionReference": "",
						"mapComplexValuesToString": true
					}
				},
				"inputs": [
					{
						"referenceName": "openData_Cache_CoursesWithVenues",
						"type": "DatasetReference",
						"parameters": {
							"container": {
								"value": "@variables('container')",
								"type": "Expression"
							},
							"folder": {
								"value": "@variables('cacheFolder')",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "openData_Export_CoursesWithVenues",
						"type": "DatasetReference",
						"parameters": {
							"container": {
								"value": "@variables('container')",
								"type": "Expression"
							},
							"folder": {
								"value": "@variables('exportFolder')",
								"type": "Expression"
							},
							"filename": {
								"value": "@concat(formatDateTime(utcnow(), 'yyyy-MM-dd'), '-courses-with-venues.csv')",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Transform data",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "Copy Regions",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Copy backups",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "openData_TransformAll",
						"type": "DataFlowReference",
						"datasetParameters": {
							"Courses": {
								"container": {
									"value": "@variables('container')",
									"type": "Expression"
								},
								"folder": {
									"value": "@variables('backupFolder')",
									"type": "Expression"
								},
								"filename": {
									"value": "@concat(formatDateTime(utcnow(), 'yyyy-MM-dd'), '-courses.json')",
									"type": "Expression"
								}
							},
							"Venues": {
								"container": {
									"value": "@variables('container')",
									"type": "Expression"
								},
								"folder": {
									"value": "@variables('backupFolder')",
									"type": "Expression"
								},
								"filename": {
									"value": "@concat(formatDateTime(utcnow(), 'yyyy-MM-dd'), '-venues.json')",
									"type": "Expression"
								}
							},
							"Providers": {
								"container": {
									"value": "@variables('container')",
									"type": "Expression"
								},
								"folder": {
									"value": "@variables('backupFolder')",
									"type": "Expression"
								},
								"filename": {
									"value": "@concat(formatDateTime(utcnow(), 'yyyy-MM-dd'), '-ukrlp.json')",
									"type": "Expression"
								}
							},
							"CourseCache": {
								"container": {
									"value": "@variables('container')",
									"type": "Expression"
								},
								"folder": {
									"value": "@variables('cacheFolder')",
									"type": "Expression"
								}
							},
							"CourseRunCache": {
								"container": {
									"value": "@variables('container')",
									"type": "Expression"
								},
								"folder": {
									"value": "@variables('cacheFolder')",
									"type": "Expression"
								}
							},
							"ProviderCache": {
								"container": {
									"value": "@variables('container')",
									"type": "Expression"
								},
								"folder": {
									"value": "@variables('cacheFolder')",
									"type": "Expression"
								}
							},
							"VenueCache": {
								"container": {
									"value": "@variables('container')",
									"type": "Expression"
								},
								"folder": {
									"value": "@variables('cacheFolder')",
									"type": "Expression"
								}
							}
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					}
				}
			},
			{
				"name": "Purge backups",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Check Courses backup",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Check UKRLP backup",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Check Venues backup",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@variables('deleteBackups')",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Delete Courses Backup",
							"type": "Delete",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "cosmosDb_Courses_Backup",
									"type": "DatasetReference",
									"parameters": {
										"container": {
											"value": "@variables('container')",
											"type": "Expression"
										},
										"folder": {
											"value": "@variables('backupFolder')",
											"type": "Expression"
										},
										"filename": {
											"value": "@concat(formatDateTime(utcnow(), 'yyyy-MM-dd'), '-courses.json')",
											"type": "Expression"
										}
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								}
							}
						},
						{
							"name": "Delete Venues Backup",
							"type": "Delete",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "cosmosDb_Ukrlp_Backup",
									"type": "DatasetReference",
									"parameters": {
										"container": {
											"value": "@variables('container')",
											"type": "Expression"
										},
										"folder": {
											"value": "@variables('backupFolder')",
											"type": "Expression"
										},
										"filename": {
											"value": "@concat(formatDateTime(utcnow(), 'yyyy-MM-dd'), '-ukrlp.json')",
											"type": "Expression"
										}
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								}
							}
						},
						{
							"name": "Delete Providers Backup",
							"type": "Delete",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "cosmosDb_Venues_Backup",
									"type": "DatasetReference",
									"parameters": {
										"container": {
											"value": "@variables('container')",
											"type": "Expression"
										},
										"folder": {
											"value": "@variables('backupFolder')",
											"type": "Expression"
										},
										"filename": {
											"value": "@concat(formatDateTime(utcnow(), 'yyyy-MM-dd'), '-venues.json')",
											"type": "Expression"
										}
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								}
							}
						}
					]
				}
			},
			{
				"name": "Check Courses backup",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"dataset": {
						"referenceName": "cosmosDb_Courses_Backup",
						"type": "DatasetReference",
						"parameters": {
							"container": {
								"value": "@variables('container')",
								"type": "Expression"
							},
							"folder": {
								"value": "@variables('backupFolder')",
								"type": "Expression"
							},
							"filename": {
								"value": "@concat(formatDateTime(utcnow(), 'yyyy-MM-dd'), '-courses.json')",
								"type": "Expression"
							}
						}
					}
				}
			},
			{
				"name": "Check UKRLP backup",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"dataset": {
						"referenceName": "cosmosDb_Ukrlp_Backup",
						"type": "DatasetReference",
						"parameters": {
							"container": {
								"value": "@variables('container')",
								"type": "Expression"
							},
							"folder": {
								"value": "@variables('backupFolder')",
								"type": "Expression"
							},
							"filename": {
								"value": "@concat(formatDateTime(utcnow(), 'yyyy-MM-dd'), '-ukrlp.json')",
								"type": "Expression"
							}
						}
					}
				}
			},
			{
				"name": "Check Venues backup",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"dataset": {
						"referenceName": "cosmosDb_Venues_Backup",
						"type": "DatasetReference",
						"parameters": {
							"container": {
								"value": "@variables('container')",
								"type": "Expression"
							},
							"folder": {
								"value": "@variables('backupFolder')",
								"type": "Expression"
							},
							"filename": {
								"value": "@concat(formatDateTime(utcnow(), 'yyyy-MM-dd'), '-venues.json')",
								"type": "Expression"
							}
						}
					}
				}
			},
			{
				"name": "Copy backups",
				"type": "Switch",
				"dependsOn": [
					{
						"activity": "Purge backups",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"on": {
						"value": "@variables('environment')",
						"type": "Expression"
					},
					"cases": [
						{
							"value": "cosmos",
							"activities": [
								{
									"name": "Copy Courses from Cosmos",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "CosmosDbSqlApiSource",
											"query": "SELECT * FROM c\nwhere c.ProviderUKPRN != \"0\"\nand c.ProviderUKPRN != null",
											"preferredRegions": []
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "cosmosDb_Courses",
											"type": "DatasetReference"
										}
									],
									"outputs": [
										{
											"referenceName": "cosmosDb_Courses_Backup",
											"type": "DatasetReference",
											"parameters": {
												"container": {
													"value": "@variables('container')",
													"type": "Expression"
												},
												"folder": {
													"value": "@variables('backupFolder')",
													"type": "Expression"
												},
												"filename": {
													"value": "@concat(formatDateTime(utcnow(), 'yyyy-MM-dd'), '-courses.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy Venues from Cosmos",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "CosmosDbSqlApiSource",
											"query": "SELECT * FROM c\nwhere c.UKPRN != \"0\"\nand c.UKPRN != null",
											"preferredRegions": []
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "cosmosDb_Venues",
											"type": "DatasetReference"
										}
									],
									"outputs": [
										{
											"referenceName": "cosmosDb_Venues_Backup",
											"type": "DatasetReference",
											"parameters": {
												"container": {
													"value": "@variables('container')",
													"type": "Expression"
												},
												"folder": {
													"value": "@variables('backupFolder')",
													"type": "Expression"
												},
												"filename": {
													"value": "@concat(formatDateTime(utcnow(), 'yyyy-MM-dd'), '-venues.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy Providers from Cosmos",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "CosmosDbSqlApiSource",
											"query": "SELECT * FROM c\nwhere c.UnitedKingdomProviderReferenceNumber != 0\nand c.UnitedKingdomProviderReferenceNumber != null",
											"preferredRegions": []
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "cosmosDb_Providers",
											"type": "DatasetReference"
										}
									],
									"outputs": [
										{
											"referenceName": "cosmosDb_Ukrlp_Backup",
											"type": "DatasetReference",
											"parameters": {
												"container": {
													"value": "@variables('container')",
													"type": "Expression"
												},
												"folder": {
													"value": "@variables('backupFolder')",
													"type": "Expression"
												},
												"filename": {
													"value": "@concat(formatDateTime(utcnow(), 'yyyy-MM-dd'), '-ukrlp.json')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						},
						{
							"value": "prod",
							"activities": [
								{
									"name": "Copy Courses PROD backup",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"modifiedDatetimeStart": {
													"value": "@getPastTime(1, 'Day')",
													"type": "Expression"
												},
												"modifiedDatetimeEnd": {
													"value": "@utcnow()",
													"type": "Expression"
												},
												"wildcardFileName": "*courses-backup.json"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "cosmosDb_Courses_Backup_PROD",
											"type": "DatasetReference"
										}
									],
									"outputs": [
										{
											"referenceName": "cosmosDb_Courses_Backup",
											"type": "DatasetReference",
											"parameters": {
												"container": {
													"value": "@variables('container')",
													"type": "Expression"
												},
												"folder": {
													"value": "@variables('backupFolder')",
													"type": "Expression"
												},
												"filename": {
													"value": "@concat(formatDateTime(utcnow(), 'yyyy-MM-dd'), '-courses.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy Venues PROD backup",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"modifiedDatetimeStart": {
													"value": "@getPastTime(1, 'Day')",
													"type": "Expression"
												},
												"modifiedDatetimeEnd": {
													"value": "@utcnow()",
													"type": "Expression"
												},
												"wildcardFileName": "*venues-backup.json"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "cosmosDb_Venues_Backup_PROD",
											"type": "DatasetReference"
										}
									],
									"outputs": [
										{
											"referenceName": "cosmosDb_Venues_Backup",
											"type": "DatasetReference",
											"parameters": {
												"container": {
													"value": "@variables('container')",
													"type": "Expression"
												},
												"folder": {
													"value": "@variables('backupFolder')",
													"type": "Expression"
												},
												"filename": {
													"value": "@concat(formatDateTime(utcnow(), 'yyyy-MM-dd'), '-venues.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy UKRLP PROD backup",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"modifiedDatetimeStart": {
													"value": "@getPastTime(1, 'Day')",
													"type": "Expression"
												},
												"modifiedDatetimeEnd": {
													"value": "@utcnow()",
													"type": "Expression"
												},
												"wildcardFileName": "*ukrlp-backup.json"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "cosmosDb_Ukrlp_Backup_PROD",
											"type": "DatasetReference"
										}
									],
									"outputs": [
										{
											"referenceName": "cosmosDb_Ukrlp_Backup",
											"type": "DatasetReference",
											"parameters": {
												"container": {
													"value": "@variables('container')",
													"type": "Expression"
												},
												"folder": {
													"value": "@variables('backupFolder')",
													"type": "Expression"
												},
												"filename": {
													"value": "@concat(formatDateTime(utcnow(), 'yyyy-MM-dd'), '-ukrlp.json')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					]
				}
			}
		],
		"variables": {
			"container": {
				"type": "String",
				"defaultValue": "open-data"
			},
			"cacheFolder": {
				"type": "String",
				"defaultValue": "cache"
			},
			"exportFolder": {
				"type": "String",
				"defaultValue": "export"
			},
			"sharedFolder": {
				"type": "String",
				"defaultValue": "shared"
			},
			"backupFolder": {
				"type": "String",
				"defaultValue": "backup"
			},
			"purgeBackups": {
				"type": "Boolean",
				"defaultValue": false
			},
			"environment": {
				"type": "String",
				"defaultValue": "prod"
			}
		},
		"folder": {
			"name": "Open Data"
		},
		"annotations": [],
		"lastPublishTime": "2020-08-14T02:41:03Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}