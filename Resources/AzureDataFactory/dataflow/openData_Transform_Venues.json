{
	"name": "openData_Transform_Venues",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "cosmosDb_Venues",
						"type": "DatasetReference"
					},
					"name": "Venues"
				},
				{
					"dataset": {
						"referenceName": "openData_Cache_Courses",
						"type": "DatasetReference"
					},
					"name": "CourseRuns"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "Exists1"
				}
			],
			"script": "source(output(\n\t\tId as string,\n\t\tLocationAddress1 as string,\n\t\tLocationAddress2 as string,\n\t\tLocationCounty as string,\n\t\tLocationLatitude as double,\n\t\tLocationLongitude as double,\n\t\tLocationName as string,\n\t\tLocationPostcode as string,\n\t\tLocationTown as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tquery: 'SELECT  c.id as Id\\n       ,c.VENUE_NAME as LocationName\\n       ,c.ADDRESS_1 as LocationAddress1\\n       ,c.ADDRESS_2 as LocationAddress2\\n       ,c.TOWN as LocationTown\\n       ,c.COUNTY as LocationCounty\\n       ,c.POSTCODE as LocationPostcode\\n       ,c.Latitude as LocationLatitude\\n       ,c.Longitude as LocationLongitude                                                 \\nFROM c',\n\tformat: 'documentQuery') ~> Venues\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false) ~> CourseRuns\nVenues, CourseRuns exists(Venues@Id == CourseRuns@Id,\n\tnegate:false,\n\tbroadcast: 'auto')~> Exists1"
		}
	}
}