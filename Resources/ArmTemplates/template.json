{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "environment": {
      "type": "string",
      "metadata": {
        "description": "The environment being deployed to. Used to generate all resource names (apart from storage)"
      }
    },
    "CosmosDbResourceGroup": {
      "type": "string"
    },
    "cosmosDbName": {
      "type": "string"
    },
    "cosmosDbKey": {
      "type": "securestring"
    },
    "cosmosDbCollectionName": {
      "type": "string",
      "metadata": {
        "description": "The name of the collection to create"
      }
    },
    "dataFactoryAppDatabaseNeedsCreation": {
      "type": "bool"
    },
    "dataFactoryAppDatabaseThroughput": {
      "type": "int"
    }
  },
  "variables": {
    // remember to change the following lineand remove the -test
    "sharedPrefix": "[tolower(concat('dfc-', parameters('environment'), '-cd-test'))]",
    // remember to change above line
    "location": "[resourceGroup().location]",
    "dfcDevOpsTemplatesUrl": "https://raw.githubusercontent.com/SkillsFundingAgency/dfc-devops/master/ArmTemplates/",
    "dfcDevOpsTemplatesUrlTemp": "https://raw.githubusercontent.com/SkillsFundingAgency/dfc-devops/NCSD-4041-data-factory-templates/ArmTemplates/",
    "dataFactoryName": "[concat(variables('sharedPrefix'),'-df')]",
    "storageAccountName": "[concat(replace(variables('dataFactoryName'),'-',''),'str')]",
    "blobStorageAccountName": "[concat(replace(variables('dataFactoryName'),'-',''),'blobstr')]",
    "tableStorageAccountName": "[concat(replace(variables('dataFactoryName'),'-',''),'tablestr')]",
    "tableStorageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', variables('tableStorageAccountName'))]",
    "blobStorageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', variables('blobStorageAccountName'))]",
    "actionGroupName": "[tolower(concat('dfc-', parameters('environment'),'-prov-monitor-df-actgrp'))]",
    "actionGroupResourceGroup": "[tolower(concat('dfc-', parameters('environment'),'-prov-monitor-rg'))]",
    // "cosmosDbCollectionPartitionKey": "/PartitionKey",
    "cosmosDbDatabaseName": "providerportal"
    // "cosmosDbEndpoint": "[concat('https://', parameters('cosmosDbName'), '.documents.azure.com:443/')]"
  },
  "resources": [
    // {
    //   "name": "[variables('cosmosDbDatabaseName')]",
    //   "type": "Microsoft.Resources/deployments",
    //   "resourceGroup": "[parameters('CosmosDbResourceGroup')]",
    //   "apiVersion": "2017-05-10",
    //   "properties": {
    //     "mode": "Incremental",
    //     "templateLink": {
    //       "uri": "[concat(variables('dfcDevOpsTemplatesUrl'),'CosmosDb/cosmos-database.json')]",
    //       "contentVersion": "1.0.0.0"
    //     },
    //     "parameters": {
    //       "accountName": {
    //         "value": "[parameters('CosmosDbName')]"
    //       },
    //       "databaseName": {
    //         "value": "[variables('CosmosDbDatabaseName')]"
    //       },
    //       "useSharedRequestUnits": {
    //         "value": true
    //       },
    //       "offerThroughput": {
    //         "value": "[parameters('dataFactoryAppDatabaseThroughput')]"
    //       },
    //       "databaseNeedsCreation": {
    //         "value": "[parameters('dataFactoryAppDatabaseNeedsCreation')]"
    //       }
    //     }
    //   }
    // },
    // {
    //   "apiVersion": "2017-05-10",
    //   "name": "[parameters('cosmosDbCollectionName')]",
    //   "type": "Microsoft.Resources/deployments",
    //   "resourceGroup": "[parameters('CosmosDbResourceGroup')]",
    //   "properties": {
    //     "mode": "Incremental",
    //     "templateLink": {
    //       "uri": "[concat(variables('dfcDevOpsTemplatesUrl'), 'CosmosDb/cosmos-collection.json')]",
    //       "contentVersion": "1.0.0.0"
    //     },
    //     "parameters": {
    //       "accountName": {
    //         "value": "[parameters('cosmosDbName')]"
    //       },
    //       "databaseName": {
    //         "value": "[variables('cosmosDbDatabaseName')]"
    //       },
    //       "collectionName": {
    //         "value": "[parameters('cosmosDbCollectionName')]"
    //       },
    //       "provisionRequestUnits": {
    //         "value": false
    //       },
    //       "partitionKey": {
    //         "value": "[variables('cosmosDbCollectionPartitionKey')]"
    //       }
    //     }
    //   },
    //   "dependsOn": [
    //     "[variables('CosmosDbDatabaseName')]"
    //   ]
    // },
    {
      "name": "BlobLinkedStorage",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('dfcDevOpsTemplatesUrl'),'storage-account.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountName": {
            "value": "[variables('blobStorageAccountName')]"
          }
        }
      }
    },
    {
      "name": "TableLinkedStorage",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('dfcDevOpsTemplatesUrl'),'storage-account.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountName": {
            "value": "[variables('tableStorageAccountName')]"
          }
        }
      }
    },
    {
      "name": "blobStorage",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('dfcDevOpsTemplatesUrl'),'storage-account.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountName": {
            "value": "[variables('storageAccountName')]"
          }
        }
      }
    },
    {
      "name": "dataFactory2",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('dfcDevOpsTemplatesUrl'),'datafactory.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "DataFactoryName": {
            "value": "[variables('dataFactoryName')]"
          }
        }
      },
      "dependsOn": [
        "blobStorage"
      ]
    },
    {
      "name": "[concat(variables('dataFactoryName'), '-failed-pipelines')]",
      "apiVersion": "2019-05-01",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('dfcDevOpsTemplatesUrl'), 'Application-Insights/metric-alerts.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "enabled": {
            "value": true
          },
          "alertName": {
            "value": "[concat(variables('dataFactoryName'), '-failed-pipelines')]"
          },
          "alertSeverity": {
            "value": 3
          },
          "metricName": {
            "value": "PipelineFailedRuns"
          },
          "operator": {
            "value": "GreaterThan"
          },
          "threshold": {
            "value": "0"
          },
          "aggregation": {
            "value": "Total"
          },
          "windowSize": {
            "value": "PT5M"
          },
          "evaluationFrequency": {
            "value": "PT1M"
          },
          "actionGroupName": {
            "value": "[variables('actionGroupName')]"
          },
          "actionGroupResourceGroup": {
            "value": "[variables('actionGroupResourceGroup')]"
          },
          "resourceId": {
            "value": "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]"
          }
        }
      },
      "dependsOn": [
        "dataFactory2"
      ]
    },
    {
      "name": "providerPortalCosmosDb",
      "apiVersion": "2019-05-01",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('dfcDevOpsTemplatesUrlTemp'),'DataFactory/datafactory-linkedservice-single-cosmosdb.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "CosmosDbName": {
            "value": "[parameters('CosmosDbName')]"
          },
          "CosmosDbPrimaryKey": {
            "value": "[parameters('cosmosDbKey')]"
          },
          "CosmosDbDatabase": {
            "value": "[variables('CosmosDbDatabaseName')]"
          },
          "DataFactoryName": {
            "value": "[variables('dataFactoryName')]"
          },
          "LinkedServiceName": {
            "value": "providerPortalCosmosDb"
          }
        }
      },
      "dependsOn": [
        "dataFactory2"
      ]
    },
    {
      "name": "providerPortalTableStorage",
      "apiVersion": "2019-05-01",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('dfcDevOpsTemplatesUrlTemp'),'DataFactory/datafactory-linkedservice-table-storage.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "StorageAccountName": {
            "value": "[variables('tableStorageAccountName')]"
          },
          "StorageAccountKey": {
            "value": "[listKeys(variables('tableStorageAccountId'), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]"
          },
          "DataFactoryName": {
            "value": "[variables('dataFactoryName')]"
          },
          "LinkedServiceName": {
            "value": "providerPortalTableStorage"
          }
        }
      },
      "dependsOn": [
        "dataFactory2",
        "TableLinkedStorage"
      ]
    },
    {
      "name": "providerPortalBlobStorage",
      "apiVersion": "2019-05-01",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('dfcDevOpsTemplatesUrlTemp'),'DataFactory/datafactory-linkedservice-blob-storage.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "StorageAccountName": {
            "value": "[variables('blobStorageAccountName')]"
          },
          "StorageAccountKey": {
            "value": "[listKeys(variables('blobStorageAccountId'), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]"
          },
          "DataFactoryName": {
            "value": "[variables('dataFactoryName')]"
          },
          "LinkedServiceName": {
            "value": "providerPortalBlobStorage"
          }
        }
      },
      "dependsOn": [
        "dataFactory2",
        "BlobLinkedStorage"
      ]
    },
    {
      "name": "[concat(variables('dataFactoryName'),'/', 'cosmosDb_Courses')]",
      "type": "Microsoft.DataFactory/factories/datasets",
      "apiVersion": "2018-06-01",
      "properties": {
        "linkedServiceName": {
          "referenceName": "providerPortalCosmosDb",
          "type": "LinkedServiceReference"
        },
        "folder": {
          "name": "cosmos"
        },
        "annotations": [],
        "type": "CosmosDbSqlApiCollection",
        "schema": {
          "type": "object",
          "properties": {
            "CourseId": {
              "type": "integer"
            },
            "QualificationCourseTitle": {
              "type": "string"
            },
            "LearnAimRef": {
              "type": "string"
            },
            "NotionalNVQLevelv2": {
              "type": "string"
            },
            "AwardOrgCode": {
              "type": "string"
            },
            "QualificationType": {
              "type": "string"
            },
            "ProviderUKPRN": {
              "type": "integer"
            },
            "CourseDescription": {
              "type": "string"
            },
            "EntryRequirements": {
              "type": "string"
            },
            "WhatYoullLearn": {
              "type": "string"
            },
            "HowYoullLearn": {
              "type": "string"
            },
            "WhatYoullNeed": {
              "type": "string"
            },
            "HowYoullBeAssessed": {
              "type": "string"
            },
            "WhereNext": {
              "type": "string"
            },
            "AdultEducationBudget": {
              "type": "boolean"
            },
            "AdvancedLearnerLoan": {
              "type": "boolean"
            },
            "CourseRuns": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "CourseInstanceId": {
                    "type": "null"
                  },
                  "VenueId": {
                    "type": "null"
                  },
                  "CourseName": {
                    "type": "string"
                  },
                  "ProviderCourseID": {
                    "type": "string"
                  },
                  "DeliveryMode": {
                    "type": "integer"
                  },
                  "FlexibleStartDate": {
                    "type": "boolean"
                  },
                  "StartDate": {
                    "type": "string"
                  },
                  "CourseURL": {
                    "type": "string"
                  },
                  "Cost": {
                    "type": "integer"
                  },
                  "CostDescription": {
                    "type": "string"
                  },
                  "DurationUnit": {
                    "type": "integer"
                  },
                  "DurationValue": {
                    "type": "integer"
                  },
                  "StudyMode": {
                    "type": "integer"
                  },
                  "AttendancePattern": {
                    "type": "integer"
                  },
                  "National": {
                    "type": "null"
                  },
                  "Regions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "RecordStatus": {
                    "type": "integer"
                  },
                  "CreatedDate": {
                    "type": "string"
                  },
                  "CreatedBy": {
                    "type": "null"
                  },
                  "UpdatedDate": {
                    "type": "null"
                  },
                  "UpdatedBy": {
                    "type": "null"
                  },
                  "SubRegions": {
                    "type": "null"
                  },
                  "BulkUploadErrors": {
                    "type": "null"
                  }
                }
              }
            },
            "CourseStatus": {
              "type": "integer"
            },
            "CreatedDate": {
              "type": "string"
            },
            "CreatedBy": {
              "type": "string"
            },
            "UpdatedDate": {
              "type": "string"
            },
            "IsValid": {
              "type": "boolean"
            },
            "UpdatedBy": {
              "type": "string"
            },
            "BulkUploadErrors": {
              "type": "array"
            },
            "LarlessReason": {
              "type": "null"
            }
          }
        },
        "typeProperties": {
          "collectionName": "courses"
        }
      },
      "dependsOn": [
        "dataFactory2",
        "providerPortalCosmosDb"
      ]
    },
    {
      "name": "[concat(variables('dataFactoryName'),'/', 'cosmosDb_Providers')]",
      "type": "Microsoft.DataFactory/factories/datasets",
      "apiVersion": "2018-06-01",
      "properties": {
        "linkedServiceName": {
          "referenceName": "providerPortalCosmosDb",
          "type": "LinkedServiceReference"
        },
        "folder": {
          "name": "cosmos"
        },
        "annotations": [],
        "type": "CosmosDbSqlApiCollection",
        "schema": {
          "type": "object",
          "properties": {
            "UnitedKingdomProviderReferenceNumber": {
              "type": "string"
            },
            "ProviderName": {
              "type": "string"
            },
            "ProviderStatus": {
              "type": "string"
            },
            "ProviderContact": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ContactType": {
                    "type": "string"
                  },
                  "ContactAddress": {
                    "type": "object",
                    "properties": {
                      "SAON": {
                        "type": "object",
                        "properties": {
                          "Description": {
                            "type": "null"
                          }
                        }
                      },
                      "PAON": {
                        "type": "object",
                        "properties": {
                          "Description": {
                            "type": "string"
                          }
                        }
                      },
                      "StreetDescription": {
                        "type": "string"
                      },
                      "UniqueStreetReferenceNumber": {
                        "type": "null"
                      },
                      "Locality": {
                        "type": "null"
                      },
                      "Items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "ItemsElementName": {
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      },
                      "PostTown": {
                        "type": "null"
                      },
                      "PostCode": {
                        "type": "string"
                      },
                      "UniquePropertyReferenceNumber": {
                        "type": "null"
                      }
                    }
                  },
                  "ContactPersonalDetails": {
                    "type": "object",
                    "properties": {
                      "PersonNameTitle": {
                        "type": "null"
                      },
                      "PersonGivenName": {
                        "type": "null"
                      },
                      "PersonFamilyName": {
                        "type": "null"
                      },
                      "PersonNameSuffix": {
                        "type": "null"
                      },
                      "PersonRequestedName": {
                        "type": "null"
                      }
                    }
                  },
                  "ContactRole": {
                    "type": "null"
                  },
                  "ContactTelephone1": {
                    "type": "string"
                  },
                  "ContactTelephone2": {
                    "type": "null"
                  },
                  "ContactFax": {
                    "type": "string"
                  },
                  "ContactWebsiteAddress": {
                    "type": "null"
                  },
                  "ContactEmail": {
                    "type": "null"
                  },
                  "LastUpdated": {
                    "type": "string"
                  }
                }
              }
            },
            "ProviderVerificationDate": {
              "type": "string"
            },
            "ProviderVerificationDateSpecified": {
              "type": "boolean"
            },
            "ExpiryDateSpecified": {
              "type": "boolean"
            },
            "ProviderAssociations": {
              "type": "null"
            },
            "ProviderAliases": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ProviderAlias": {
                    "type": "null"
                  },
                  "LastUpdated": {
                    "type": "null"
                  }
                }
              }
            },
            "VerificationDetails": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "VerificationAuthority": {
                    "type": "string"
                  },
                  "VerificationID": {
                    "type": "string"
                  }
                }
              }
            },
            "DateUpdated": {
              "type": "string"
            },
            "DateDownloaded": {
              "type": "string"
            },
            "Status": {
              "type": "integer"
            }
          }
        },
        "typeProperties": {
          "collectionName": "ukrlp"
        }
      },
      "dependsOn": [
        "dataFactory2",
        "providerPortalCosmosDb"
      ]
    },
    {
      "name": "[concat(variables('dataFactoryName'),'/', 'cosmosDb_Venues')]",
      "type": "Microsoft.DataFactory/factories/datasets",
      "apiVersion": "2018-06-01",
      "properties": {
        "linkedServiceName": {
          "referenceName": "providerPortalCosmosDb",
          "type": "LinkedServiceReference"
        },
        "folder": {
          "name": "cosmos"
        },
        "annotations": [],
        "type": "CosmosDbSqlApiCollection",
        "schema": {
          "type": "object",
          "properties": {
            "UKPRN": {
              "type": "integer"
            },
            "PROVIDER_ID": {
              "type": "integer"
            },
            "VENUE_ID": {
              "type": "integer"
            },
            "VENUE_NAME": {
              "type": "string"
            },
            "PROV_VENUE_ID": {
              "type": "string"
            },
            "ADDRESS_1": {
              "type": "string"
            },
            "ADDRESS_2": {
              "type": "string"
            },
            "TOWN": {
              "type": "string"
            },
            "COUNTY": {
              "type": "string"
            },
            "POSTCODE": {
              "type": "string"
            },
            "Latitude": {
              "type": "number"
            },
            "Longitude": {
              "type": "number"
            },
            "Status": {
              "type": "integer"
            },
            "DateUpdated": {
              "type": "string"
            },
            "UpdatedBy": {
              "type": "string"
            },
            "PHONE": {
              "type": "string"
            },
            "EMAIL": {
              "type": "string"
            },
            "WEBSITE": {
              "type": "string"
            },
            "LocationId": {
              "type": "integer"
            },
            "TribalLocationId": {
              "type": "null"
            },
            "Telephone": {
              "type": "string"
            },
            // "Email": {
            //   "type": "string"
            // },
            // "Website": {
            //   "type": "string"
            // },
            "CreatedBy": {
              "type": "string"
            },
            "CreatedDate": {
              "type": "string"
            }
          }
        },
        "typeProperties": {
          "collectionName": "venues"
        },
        "dependsOn": [
          "dataFactory2",
          "providerPortalCosmosDb"
        ]
      }
    },
    {
      "name": "[concat(variables('dataFactoryName'),'/', 'githubRaw')]",
      "type": "Microsoft.DataFactory/factories/linkedServices",
      "apiVersion": "2018-06-01",
      "properties": {
        "annotations": [],
        "type": "HttpServer",
        "typeProperties": {
          "url": "https://raw.githubusercontent.com",
          "enableServerCertificateValidation": true,
          "authenticationType": "Anonymous"
        }
      },
      "dependsOn": [
        "dataFactory2"
      ]
    },
    {
      "name": "[concat(variables('dataFactoryName'),'/', 'github_Regions')]",
      "type": "Microsoft.DataFactory/factories/datasets",
      "apiVersion": "2018-06-01",
      "properties": {
        "linkedServiceName": {
          "referenceName": "githubRaw",
          "type": "LinkedServiceReference"
        },
        "folder": {
          "name": "github"
        },
        "annotations": [],
        "type": "Json",
        "typeProperties": {
          "location": {
            "type": "HttpServerLocation",
            "relativeUrl": "/SkillsFundingAgency/dfc-coursedirectory-datafactory/features/PTCD-337/openapi/Resources/DataSources/regions.json"
          }
        },
        "schema": {
          "type": "object",
          "properties": {
            "Id": {
              "type": "string"
            },
            "ApiLocationId": {
              "type": "integer"
            },
            "SubRegionName": {
              "type": "string"
            },
            "Checked": {
              "type": "boolean"
            },
            "Latitude": {
              "type": "number"
            },
            "Longitude": {
              "type": "number"
            },
            "Weighting": {
              "type": "integer"
            }
          }
        }
      },
      "dependsOn": [
        "dataFactory2",
        "githubRaw"
      ]
    },
    {
      "name": "[concat(variables('dataFactoryName'),'/', 'openData_Cache_Courses')]",
      "type": "Microsoft.DataFactory/factories/datasets",
      "apiVersion": "2018-06-01",
      "properties": {
        "linkedServiceName": {
          "referenceName": "providerPortalBlobStorage",
          "type": "LinkedServiceReference"
        },
        "folder": {
          "name": "openDataExpot"
        },
        "annotations": [],
        "type": "Json",
        "typeProperties": {
          "location": {
            "type": "AzureBlobStorageLocation",
            "fileName": "courses.json",
            "folderPath": {
              "value": "@concat('cache/', formatDateTime(utcnow(), 'yyyy-MM-dd')) ",
              "type": "Expression"
            },
            "container": "open-data"
          }
        },
        "schema": {
          "type": "object",
          "properties": {
            "ProviderUKPRN": {
              "type": "integer"
            },
            "CourseId": {
              "type": "integer"
            },
            "LearnAimRef": {
              "type": "string"
            },
            "CourseName": {
              "type": "string"
            },
            "DeliveryMode": {
              "type": "integer"
            },
            "FlexibleStartDate": {
              "type": "boolean"
            },
            "StartDate": {
              "type": "string"
            },
            "CourseURL": {
              "type": "null"
            },
            "Cost": {
              "type": "integer"
            },
            "CostDescription": {
              "type": "string"
            },
            "National": {
              "type": "boolean"
            },
            "Regions": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "VenueId": {
              "type": "string"
            },
            "UpdatedDate": {
              "type": "string"
            },
            "DurationUnit": {
              "type": "integer"
            },
            "DurationValue": {
              "type": "integer"
            },
            "AttendancePattern": {
              "type": "integer"
            }
          }
        }
      },
      "dependsOn": [
        "dataFactory2",
        "providerPortalBlobStorage"
      ]
    },
    {
      "name": "[concat(variables('dataFactoryName'),'/', 'openData_Cache_CoursesWithVenues')]",
      "type": "Microsoft.DataFactory/factories/datasets",
      "apiVersion": "2018-06-01",
      "properties": {
        "linkedServiceName": {
          "referenceName": "providerPortalBlobStorage",
          "type": "LinkedServiceReference"
        },
        "folder": {
          "name": "openDataExpot"
        },
        "annotations": [],
        "type": "Json",
        "typeProperties": {
          "location": {
            "type": "AzureBlobStorageLocation",
            "fileName": "coursesWithVenues.json",
            "folderPath": {
              "value": "@concat('cache/', formatDateTime(utcnow(), 'yyyy-MM-dd')) ",
              "type": "Expression"
            },
            "container": "open-data"
          }
        },
        "schema": {
          "type": "object",
          "properties": {
            "ProviderUKPRN": {
              "type": "integer"
            },
            "CourseId": {
              "type": "integer"
            },
            "LearnAimRef": {
              "type": "string"
            },
            "CourseName": {
              "type": "string"
            },
            "DeliveryMode": {
              "type": "integer"
            },
            "FlexibleStartDate": {
              "type": "boolean"
            },
            "StartDate": {
              "type": "string"
            },
            "CourseURL": {
              "type": "null"
            },
            "Cost": {
              "type": "integer"
            },
            "CostDescription": {
              "type": "string"
            },
            "National": {
              "type": "boolean"
            },
            "Regions": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "VenueId": {
              "type": "string"
            },
            "LocationName": {
              "type": "string"
            },
            "LocationAddress1": {
              "type": "string"
            },
            "LocationAddress2": {
              "type": "null"
            },
            "LocationTown": {
              "type": "string"
            },
            "LocationCounty": {
              "type": "string"
            },
            "LocationPostcode": {
              "type": "string"
            },
            "LocationLatitude": {
              "type": "number"
            },
            "LocationLongitude": {
              "type": "number"
            },
            "UpdatedDate": {
              "type": "string"
            },
            "DurationUnit": {
              "type": "integer"
            },
            "DurationValue": {
              "type": "integer"
            },
            "AttendancePattern": {
              "type": "integer"
            }
          }
        }
      },
      "dependsOn": [
        "dataFactory2",
        "providerPortalBlobStorage"
      ]
    },
    {
      "name": "[concat(variables('dataFactoryName'),'/', 'openData_Cache_Providers')]",
      "type": "Microsoft.DataFactory/factories/datasets",
      "apiVersion": "2018-06-01",
      "properties": {
        "linkedServiceName": {
          "referenceName": "providerPortalBlobStorage",
          "type": "LinkedServiceReference"
        },
        "folder": {
          "name": "openDataExpot"
        },
        "annotations": [],
        "type": "Json",
        "typeProperties": {
          "location": {
            "type": "AzureBlobStorageLocation",
            "fileName": "providers.json",
            "folderPath": {
              "value": "@concat('cache/', formatDateTime(utcnow(), 'yyyy-MM-dd')) ",
              "type": "Expression"
            },
            "container": "open-data"
          }
        },
        "schema": {
          "type": "object",
          "properties": {
            "UnitedKingdomProviderReferenceNumber": {
              "type": "string"
            },
            "ProviderName": {
              "type": "string"
            },
            "TradingName": {
              "type": "string"
            },
            "ProviderStatus": {
              "type": "string"
            },
            "ProviderContact": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ContactType": {
                    "type": "string"
                  },
                  "ContactAddress": {
                    "type": "object",
                    "properties": {
                      "SAON": {
                        "type": "object",
                        "properties": {
                          "Description": {
                            "type": "null"
                          }
                        }
                      },
                      "PAON": {
                        "type": "object",
                        "properties": {
                          "Description": {
                            "type": "string"
                          }
                        }
                      },
                      "StreetDescription": {
                        "type": "string"
                      },
                      "UniqueStreetReferenceNumber": {
                        "type": "null"
                      },
                      "Locality": {
                        "type": "null"
                      },
                      "Items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "ItemsElementName": {
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      },
                      "PostTown": {
                        "type": "null"
                      },
                      "PostCode": {
                        "type": "string"
                      },
                      "UniquePropertyReferenceNumber": {
                        "type": "null"
                      }
                    }
                  },
                  "ContactPersonalDetails": {
                    "type": "object",
                    "properties": {
                      "PersonNameTitle": {
                        "type": "null"
                      },
                      "PersonGivenName": {
                        "type": "null"
                      },
                      "PersonFamilyName": {
                        "type": "null"
                      },
                      "PersonNameSuffix": {
                        "type": "null"
                      },
                      "PersonRequestedName": {
                        "type": "null"
                      }
                    }
                  },
                  "ContactRole": {
                    "type": "null"
                  },
                  "ContactTelephone1": {
                    "type": "string"
                  },
                  "ContactTelephone2": {
                    "type": "null"
                  },
                  "ContactFax": {
                    "type": "string"
                  },
                  "ContactWebsiteAddress": {
                    "type": "null"
                  },
                  "ContactEmail": {
                    "type": "null"
                  },
                  "LastUpdated": {
                    "type": "string"
                  }
                }
              }
            },
            "ProviderVerificationDate": {
              "type": "string"
            },
            "ProviderVerificationDateSpecified": {
              "type": "boolean"
            },
            "ExpiryDateSpecified": {
              "type": "boolean"
            },
            "ProviderAssociations": {
              "type": "null"
            },
            "ProviderAliases": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ProviderAlias": {
                    "type": "null"
                  },
                  "LastUpdated": {
                    "type": "null"
                  }
                }
              }
            },
            "VerificationDetails": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "VerificationAuthority": {
                    "type": "string"
                  },
                  "VerificationID": {
                    "type": "string"
                  }
                }
              }
            },
            "id": {
              "type": "string"
            },
            "DateUpdated": {
              "type": "string"
            },
            "DateDownloaded": {
              "type": "string"
            },
            "Status": {
              "type": "integer"
            }
          }
        }
      },
      "dependsOn": [
        "dataFactory2",
        "providerPortalBlobStorage"
      ]
    },
    {
      "name": "[concat(variables('dataFactoryName'),'/', 'openData_Cache_Regions')]",
      "type": "Microsoft.DataFactory/factories/datasets",
      "apiVersion": "2018-06-01",
      "properties": {
        "linkedServiceName": {
          "referenceName": "providerPortalBlobStorage",
          "type": "LinkedServiceReference"
        },
        "folder": {
          "name": "openDataExpot"
        },
        "annotations": [],
        "type": "Json",
        "typeProperties": {
          "location": {
            "type": "AzureBlobStorageLocation",
            "fileName": "regions.json",
            "folderPath": {
              "value": "@concat('cache/', formatDateTime(utcnow(), 'yyyy-MM-dd')) ",
              "type": "Expression"
            },
            "container": "open-data"
          }
        },
        "schema": {
          "type": "object",
          "properties": {
            "Id": {
              "type": "string"
            },
            "ApiLocationId": {
              "type": "integer"
            },
            "SubRegionName": {
              "type": "string"
            },
            "Checked": {
              "type": "boolean"
            },
            "Latitude": {
              "type": "number"
            },
            "Longitude": {
              "type": "number"
            },
            "Weighting": {
              "type": "integer"
            }
          }
        }
      },
      "dependsOn": [
        "dataFactory2",
        "providerPortalBlobStorage"
      ]
    },
    {
      "name": "[concat(variables('dataFactoryName'),'/', 'openData_Cache_Venues')]",
      "type": "Microsoft.DataFactory/factories/datasets",
      "apiVersion": "2018-06-01",
      "properties": {
        "linkedServiceName": {
          "referenceName": "providerPortalBlobStorage",
          "type": "LinkedServiceReference"
        },
        "folder": {
          "name": "openDataExpot"
        },
        "annotations": [],
        "type": "Json",
        "typeProperties": {
          "location": {
            "type": "AzureBlobStorageLocation",
            "fileName": "venues.json",
            "folderPath": {
              "value": "@concat('cache/', formatDateTime(utcnow(), 'yyyy-MM-dd')) ",
              "type": "Expression"
            },
            "container": "open-data"
          }
        },
        "schema": {
          "type": "object",
          "properties": {
            "Id": {
              "type": "string"
            },
            "LocationName": {
              "type": "string"
            },
            "LocationAddress1": {
              "type": "string"
            },
            "LocationAddress2": {
              "type": "null"
            },
            "LocationTown": {
              "type": "string"
            },
            "LocationCounty": {
              "type": "string"
            },
            "LocationPostcode": {
              "type": "string"
            },
            "LocationLatitude": {
              "type": "number"
            },
            "LocationLongitude": {
              "type": "number"
            }
          }
        }
      },
      "dependsOn": [
        "dataFactory2",
        "providerPortalBlobStorage"
      ]
    },
    {
      "name": "[concat(variables('dataFactoryName'),'/', 'openData_Export_Courses')]",
      "type": "Microsoft.DataFactory/factories/datasets",
      "apiVersion": "2018-06-01",
      "properties": {
        "linkedServiceName": {
          "referenceName": "providerPortalBlobStorage",
          "type": "LinkedServiceReference"
        },
        "folder": {
          "name": "openDataExpot"
        },
        "annotations": [],
        "type": "DelimitedText",
        "typeProperties": {
          "location": {
            "type": "AzureBlobStorageLocation",
            "folderPath": {
              "value": "@concat('export/', formatDateTime(utcnow(), 'yyyy-MM-dd')) ",
              "type": "Expression"
            },
            "container": "open-data"
          },
          "columnDelimiter": ",",
          "escapeChar": "\\",
          "firstRowAsHeader": true,
          "quoteChar": "\""
        },
        "schema": [
          {
            "name": "ProviderUkprn",
            "type": "String"
          },
          {
            "name": "CourseName",
            "type": "String"
          },
          {
            "name": "CourseId",
            "type": "String"
          },
          {
            "name": "LearnAimRef",
            "type": "String"
          },
          {
            "name": "DeliveryMode",
            "type": "String"
          },
          {
            "name": "StartDate",
            "type": "String"
          },
          {
            "name": "FlexibleStartDate",
            "type": "String"
          },
          {
            "name": "CourseURL",
            "type": "String"
          },
          {
            "name": "Cost",
            "type": "String"
          },
          {
            "name": "CostDescription",
            "type": "String"
          },
          {
            "name": "Regions",
            "type": "String"
          },
          {
            "name": "National",
            "type": "String"
          },
          {
            "name": "LocationName",
            "type": "String"
          },
          {
            "name": "LocationAddress1",
            "type": "String"
          },
          {
            "name": "LocationAddress2",
            "type": "String"
          },
          {
            "name": "LocationTown",
            "type": "String"
          },
          {
            "name": "LocationPostcode",
            "type": "String"
          },
          {
            "name": "LocationLatitude",
            "type": "String"
          },
          {
            "name": "LocationLongitude",
            "type": "String"
          },
          {
            "name": "UpdatedDate",
            "type": "String"
          },
          {
            "name": "DurationUnit",
            "type": "String"
          },
          {
            "name": "DurationValue",
            "type": "String"
          },
          {
            "name": "AttendanceType",
            "type": "String"
          }
        ]
      },
      "dependsOn": [
        "dataFactory2",
        "providerPortalBlobStorage"
      ]
    },
    {
      "name": "[concat(variables('dataFactoryName'),'/', 'openData_Export_Providers')]",
      "type": "Microsoft.DataFactory/factories/datasets",
      "apiVersion": "2018-06-01",
      "properties": {
        "linkedServiceName": {
          "referenceName": "providerPortalBlobStorage",
          "type": "LinkedServiceReference"
        },
        "folder": {
          "name": "openDataExpot"
        },
        "annotations": [],
        "type": "DelimitedText",
        "typeProperties": {
          "location": {
            "type": "AzureBlobStorageLocation",
            "folderPath": {
              "value": "@concat('export/', formatDateTime(utcnow(), 'yyyy-MM-dd')) ",
              "type": "Expression"
            },
            "container": "open-data"
          },
          "columnDelimiter": ",",
          "escapeChar": "\\",
          "firstRowAsHeader": true,
          "quoteChar": "\""
        },
        "schema": [
          {
            "name": "ProviderUkprn",
            "type": "String"
          },
          {
            "name": "ProviderName",
            "type": "String"
          },
          {
            "name": "TradingName",
            "type": "String"
          },
          {
            "name": "ContactAddress1",
            "type": "String"
          },
          {
            "name": "ContactAddress2",
            "type": "String"
          },
          {
            "name": "ContactTown",
            "type": "String"
          },
          {
            "name": "ContactPostcode",
            "type": "String"
          },
          {
            "name": "ContactWebsite",
            "type": "String"
          },
          {
            "name": "ContactEmail",
            "type": "String"
          },
          {
            "name": "ContactPhone",
            "type": "String"
          }
        ]
      },
      "dependsOn": [
        "dataFactory2",
        "providerPortalBlobStorage"
      ]
    },
    {
      "name": "[concat(variables('dataFactoryName'),'/', 'openData_Export_Regions')]",
      "type": "Microsoft.DataFactory/factories/datasets",
      "apiVersion": "2018-06-01",
      "properties": {
        "linkedServiceName": {
          "referenceName": "providerPortalBlobStorage",
          "type": "LinkedServiceReference"
        },
        "folder": {
          "name": "openDataExpot"
        },
        "annotations": [],
        "type": "DelimitedText",
        "typeProperties": {
          "location": {
            "type": "AzureBlobStorageLocation",
            "fileName": "regions.csv",
            "folderPath": {
              "value": "@concat('export/', formatDateTime(utcnow(), 'yyyy-MM-dd')) ",
              "type": "Expression"
            },
            "container": "open-data"
          },
          "columnDelimiter": ",",
          "escapeChar": "\\",
          "firstRowAsHeader": true,
          "quoteChar": "\""
        },
        "schema": [
          {
            "name": "Id",
            "type": "String"
          },
          {
            "name": "ApiLocationId",
            "type": "String"
          },
          {
            "name": "SubRegionName",
            "type": "String"
          },
          {
            "name": "Latitude",
            "type": "String"
          },
          {
            "name": "Longitude",
            "type": "String"
          }
        ]
      },
      "dependsOn": [
        "dataFactory2",
        "providerPortalBlobStorage"
      ]
    },
    {
      "name": "[concat(variables('dataFactoryName'),'/', 'openData_History_Courses')]",
      "type": "Microsoft.DataFactory/factories/datasets",
      "apiVersion": "2018-06-01",
      "properties": {
        "linkedServiceName": {
          "referenceName": "providerPortalBlobStorage",
          "type": "LinkedServiceReference"
        },
        "folder": {
          "name": "openDataExpot"
        },
        "annotations": [],
        "type": "DelimitedText",
        "typeProperties": {
          "location": {
            "type": "AzureBlobStorageLocation",
            "folderPath": {
              "value": "@concat('export/', formatDateTime(utcnow(), 'yyyy-MM-dd'), '/', formatDateTime(utcnow(), 'HHmm')) ",
              "type": "Expression"
            },
            "container": "open-data"
          },
          "columnDelimiter": ",",
          "escapeChar": "\\",
          "firstRowAsHeader": true,
          "quoteChar": "\""
        },
        "schema": [
          {
            "name": "ProviderUkprn",
            "type": "String"
          },
          {
            "name": "CourseName",
            "type": "String"
          },
          {
            "name": "CourseId",
            "type": "String"
          },
          {
            "name": "LearnAimRef",
            "type": "String"
          },
          {
            "name": "DeliveryMode",
            "type": "String"
          },
          {
            "name": "StartDate",
            "type": "String"
          },
          {
            "name": "FlexibleStartDate",
            "type": "String"
          },
          {
            "name": "CourseURL",
            "type": "String"
          },
          {
            "name": "Cost",
            "type": "String"
          },
          {
            "name": "CostDescription",
            "type": "String"
          },
          {
            "name": "Regions",
            "type": "String"
          },
          {
            "name": "National",
            "type": "String"
          },
          {
            "name": "LocationName",
            "type": "String"
          },
          {
            "name": "LocationAddress1",
            "type": "String"
          },
          {
            "name": "LocationAddress2",
            "type": "String"
          },
          {
            "name": "LocationTown",
            "type": "String"
          },
          {
            "name": "LocationPostcode",
            "type": "String"
          },
          {
            "name": "LocationLatitude",
            "type": "String"
          },
          {
            "name": "LocationLongitude",
            "type": "String"
          },
          {
            "name": "UpdatedDate",
            "type": "String"
          },
          {
            "name": "DurationUnit",
            "type": "String"
          },
          {
            "name": "DurationValue",
            "type": "String"
          },
          {
            "name": "AttendanceType",
            "type": "String"
          }
        ]
      },
      "dependsOn": [
        "dataFactory2",
        "providerPortalBlobStorage"
      ]
    },
    {
      "name": "[concat(variables('dataFactoryName'),'/', 'openData_History_Providers')]",
      "type": "Microsoft.DataFactory/factories/datasets",
      "apiVersion": "2018-06-01",
      "properties": {
        "linkedServiceName": {
          "referenceName": "providerPortalBlobStorage",
          "type": "LinkedServiceReference"
        },
        "folder": {
          "name": "openDataExpot"
        },
        "annotations": [],
        "type": "DelimitedText",
        "typeProperties": {
          "location": {
            "type": "AzureBlobStorageLocation",
            "folderPath": {
              "value": "@concat('export/', formatDateTime(utcnow(), 'yyyy-MM-dd'), '/', formatDateTime(utcnow(), 'HHmm')) ",
              "type": "Expression"
            },
            "container": "open-data"
          },
          "columnDelimiter": ",",
          "escapeChar": "\\",
          "firstRowAsHeader": true,
          "quoteChar": "\""
        },
        "schema": [
          {
            "name": "ukprn",
            "type": "String"
          },
          {
            "name": "providerName",
            "type": "String"
          },
          {
            "name": "tradingName",
            "type": "String"
          },
          {
            "name": "contactAddress1",
            "type": "String"
          },
          {
            "name": "contactAddress2",
            "type": "String"
          },
          {
            "name": "contactTown",
            "type": "String"
          },
          {
            "name": "contactPostcode",
            "type": "String"
          },
          {
            "name": "contactWebsite",
            "type": "String"
          },
          {
            "name": "contactEmail",
            "type": "String"
          },
          {
            "name": "contactPhone",
            "type": "String"
          }
        ]
      },
      "dependsOn": [
        "dataFactory2",
        "providerPortalBlobStorage"
      ]
    },
    {
      "name": "[concat(variables('dataFactoryName'),'/', 'openData_Course_AttachVenues')]",
      "type": "Microsoft.DataFactory/factories/dataflows",
      "apiVersion": "2018-06-01",
      "properties": {
        "folder": {
          "name": "openDataExport"
        },
        "type": "MappingDataFlow",
        "typeProperties": {
          "sources": [
            {
              "dataset": {
                "referenceName": "openData_Cache_Courses",
                "type": "DatasetReference"
              },
              "name": "Courses"
            },
            {
              "dataset": {
                "referenceName": "cosmosDb_Venues",
                "type": "DatasetReference"
              },
              "name": "Venues"
            }
          ],
          "sinks": [
            {
              "dataset": {
                "referenceName": "openData_Export_Courses",
                "type": "DatasetReference"
              },
              "name": "Export"
            }
          ],
          "transformations": [
            {
              "name": "SplitByLocationType"
            },
            {
              "name": "JoinVenues"
            },
            {
              "name": "UnionCourses"
            },
            {
              "name": "SelectColumns"
            }
          ],
          "script": "source(output(\n\t\tProviderUKPRN as string,\n\t\tCourseId as string,\n\t\tLearnAimRef as string,\n\t\tCourseName as string,\n\t\tDeliveryMode as string,\n\t\tFlexibleStartDate as boolean,\n\t\tStartDate as string,\n\t\tCourseURL as string,\n\t\tCost as string,\n\t\tCostDescription as string,\n\t\tNational as boolean,\n\t\tRegions as string,\n\t\tVenueId as string,\n\t\tUpdatedDate as string,\n\t\tDurationUnit as string,\n\t\tDurationValue as string,\n\t\tAttendancePattern as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true) ~> Courses\nsource(output(\n\t\tId as string,\n\t\tLocationAddress1 as string,\n\t\tLocationAddress2 as string,\n\t\tLocationCounty as string,\n\t\tLocationLatitude as double,\n\t\tLocationLongitude as double,\n\t\tLocationName as string,\n\t\tLocationPostcode as string,\n\t\tLocationTown as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tquery: 'SELECT  c.id as Id\\n       ,c.VENUE_NAME as LocationName\\n       ,c.ADDRESS_1 as LocationAddress1\\n       ,c.ADDRESS_2 as LocationAddress2\\n       ,c.TOWN as LocationTown\\n       ,c.COUNTY as LocationCounty\\n       ,c.POSTCODE as LocationPostcode\\n       ,c.Latitude as LocationLatitude\\n       ,c.Longitude as LocationLongitude                                                 \\nFROM c',\n\tformat: 'documentQuery',\n\tsystemColumns: false) ~> Venues\nCourses split(not(isNull(VenueId)),\n\tnot(isNull(Regions)),\n\tNational,\n\tdisjoint: false) ~> SplitByLocationType@(CoursesWithVenues, RegionalCourses, NationalCourses, UnknownLocation)\nSplitByLocationType@CoursesWithVenues, Venues join(VenueId == Id,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinVenues\nJoinVenues, SplitByLocationType@RegionalCourses, SplitByLocationType@NationalCourses union(byName: true)~> UnionCourses\nUnionCourses select(mapColumn(\n\t\tProviderUKPRN,\n\t\tCourseId,\n\t\tLearnAimRef,\n\t\tCourseName,\n\t\tDeliveryMode,\n\t\tFlexibleStartDate,\n\t\tStartDate,\n\t\tCourseURL,\n\t\tCost,\n\t\tCostDescription,\n\t\tNational,\n\t\tRegions,\n\t\tLocationAddress1,\n\t\tLocationAddress2,\n\t\tLocationCounty,\n\t\tLocationLatitude,\n\t\tLocationLongitude,\n\t\tLocationName,\n\t\tLocationPostcode,\n\t\tLocationTown,\n\t\tUpdatedDate,\n\t\tAttendancePattern,\n\t\tDurationUnit,\n\t\tDurationValue\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectColumns\nSelectColumns sink(input(\n\t\tProviderUkprn as string,\n\t\tCourseName as string,\n\t\tCourseId as string,\n\t\tLearnAimRef as string,\n\t\tDeliveryMode as string,\n\t\tStartDate as string,\n\t\tFlexibleStartDate as string,\n\t\tCourseURL as string,\n\t\tCost as string,\n\t\tCostDescription as string,\n\t\tRegions as string,\n\t\tNational as string,\n\t\tLocationName as string,\n\t\tLocationAddress1 as string,\n\t\tLocationAddress2 as string,\n\t\tLocationTown as string,\n\t\tLocationPostcode as string,\n\t\tLocationLatitude as string,\n\t\tLocationLongitude as string,\n\t\tUpdatedDate as string,\n\t\tDurationUnit as string,\n\t\tDurationValue as string,\n\t\tAttendanceType as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['courses.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tquoteAll: true) ~> Export"
        }
      },
      "dependsOn": [
        "dataFactory2",
        "openData_Cache_Courses",
        "cosmosDb_Venues",
        "openData_Export_Courses"
      ]
    }
  ],
  "outputs": {}
}
