{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "environment": {
      "type": "string",
      "metadata": {
        "description": "The environment being deployed to. Used to generate all resource names (apart from storage)"
      }
    },
    "CosmosDbResourceGroup": {
      "type": "string"
    },
    "cosmosDbName": {
      "type": "string"
    },
    "cosmosDbKey": {
      "type": "securestring"
    },
    "cosmosDbCollectionName": {
      "type": "string",
      "metadata": {
        "description": "The name of the collection to create"
      }
    },
    "dataFactoryAppDatabaseNeedsCreation": {
      "type": "bool"
    },
    "dataFactoryAppDatabaseThroughput": {
      "type": "int"
    }
  },
  "variables": {
    // remember to change the following lineand remove the -test
    "sharedPrefix": "[tolower(concat('dfc-', parameters('environment'), '-cd-test'))]",
    // remember to change above line
    "location": "[resourceGroup().location]",
    "dfcDevOpsTemplatesUrl": "https://raw.githubusercontent.com/SkillsFundingAgency/dfc-devops/master/ArmTemplates/",
    "dfcDevOpsTemplatesUrlTemp": "https://raw.githubusercontent.com/SkillsFundingAgency/dfc-devops/NCSD-4041-data-factory-templates/ArmTemplates/",
    "dataFactoryName": "[concat(variables('sharedPrefix'),'-df')]",
    "storageAccountName": "[concat(replace(variables('dataFactoryName'),'-',''),'str')]",
    "blobStorageAccountName": "[concat(replace(variables('dataFactoryName'),'-',''),'blobstr')]",
    "tableStorageAccountName": "[concat(replace(variables('dataFactoryName'),'-',''),'tablestr')]",
    "tableStorageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', variables('tableStorageAccountName'))]",
    "blobStorageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', variables('blobStorageAccountName'))]",
    "actionGroupName": "[tolower(concat('dfc-', parameters('environment'),'-prov-monitor-df-actgrp'))]",
    "actionGroupResourceGroup": "[tolower(concat('dfc-', parameters('environment'),'-prov-monitor-rg'))]",
    // "cosmosDbCollectionPartitionKey": "/PartitionKey",
    "cosmosDbDatabaseName": "providerportal",
    // "cosmosDbEndpoint": "[concat('https://', parameters('cosmosDbName'), '.documents.azure.com:443/')]"
  },
  "resources": [
    // {
    //   "name": "[variables('cosmosDbDatabaseName')]",
    //   "type": "Microsoft.Resources/deployments",
    //   "resourceGroup": "[parameters('CosmosDbResourceGroup')]",
    //   "apiVersion": "2017-05-10",
    //   "properties": {
    //     "mode": "Incremental",
    //     "templateLink": {
    //       "uri": "[concat(variables('dfcDevOpsTemplatesUrl'),'CosmosDb/cosmos-database.json')]",
    //       "contentVersion": "1.0.0.0"
    //     },
    //     "parameters": {
    //       "accountName": {
    //         "value": "[parameters('CosmosDbName')]"
    //       },
    //       "databaseName": {
    //         "value": "[variables('CosmosDbDatabaseName')]"
    //       },
    //       "useSharedRequestUnits": {
    //         "value": true
    //       },
    //       "offerThroughput": {
    //         "value": "[parameters('dataFactoryAppDatabaseThroughput')]"
    //       },
    //       "databaseNeedsCreation": {
    //         "value": "[parameters('dataFactoryAppDatabaseNeedsCreation')]"
    //       }
    //     }
    //   }
    // },
    // {
    //   "apiVersion": "2017-05-10",
    //   "name": "[parameters('cosmosDbCollectionName')]",
    //   "type": "Microsoft.Resources/deployments",
    //   "resourceGroup": "[parameters('CosmosDbResourceGroup')]",
    //   "properties": {
    //     "mode": "Incremental",
    //     "templateLink": {
    //       "uri": "[concat(variables('dfcDevOpsTemplatesUrl'), 'CosmosDb/cosmos-collection.json')]",
    //       "contentVersion": "1.0.0.0"
    //     },
    //     "parameters": {
    //       "accountName": {
    //         "value": "[parameters('cosmosDbName')]"
    //       },
    //       "databaseName": {
    //         "value": "[variables('cosmosDbDatabaseName')]"
    //       },
    //       "collectionName": {
    //         "value": "[parameters('cosmosDbCollectionName')]"
    //       },
    //       "provisionRequestUnits": {
    //         "value": false
    //       },
    //       "partitionKey": {
    //         "value": "[variables('cosmosDbCollectionPartitionKey')]"
    //       }
    //     }
    //   },
    //   "dependsOn": [
    //     "[variables('CosmosDbDatabaseName')]"
    //   ]
    // },
    {
      "name": "BlobLinkedStorage",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('dfcDevOpsTemplatesUrl'),'storage-account.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountName": {
            "value": "[variables('blobStorageAccountName')]"
          }
        }
      }
    },
    {
      "name": "TableLinkedStorage",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('dfcDevOpsTemplatesUrl'),'storage-account.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountName": {
            "value": "[variables('tableStorageAccountName')]"
          }
        }
      }
    },
    {
      "name": "blobStorage",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('dfcDevOpsTemplatesUrl'),'storage-account.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountName": {
            "value": "[variables('storageAccountName')]"
          }
        }
      }
    },
    {
      "name": "dataFactory2",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('dfcDevOpsTemplatesUrl'),'datafactory.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "DataFactoryName": {
            "value": "[variables('dataFactoryName')]"
          }
        }
      },
      "dependsOn": [
        "blobStorage"
      ]
    },
    {
      "name": "[concat(variables('dataFactoryName'), '-failed-pipelines')]",
      "apiVersion": "2019-05-01",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('dfcDevOpsTemplatesUrl'), 'Application-Insights/metric-alerts.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "enabled": {
            "value": true
          },
          "alertName": {
            "value": "[concat(variables('dataFactoryName'), '-failed-pipelines')]"
          },
          "alertSeverity": {
            "value": 3
          },
          "metricName": {
            "value": "PipelineFailedRuns"
          },
          "operator": {
            "value": "GreaterThan"
          },
          "threshold": {
            "value": "0"
          },
          "aggregation": {
            "value": "Total"
          },
          "windowSize": {
            "value": "PT5M"
          },
          "evaluationFrequency": {
            "value": "PT1M"
          },
          "actionGroupName": {
            "value": "[variables('actionGroupName')]"
          },
          "actionGroupResourceGroup": {
            "value": "[variables('actionGroupResourceGroup')]"
          },
          "resourceId": {
            "value": "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]"
          }
        }
      },
      "dependsOn": [
        "dataFactory2"
      ]
    },
    {
      "name": "providerPortalCosmosDb",
      "apiVersion": "2019-05-01",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('dfcDevOpsTemplatesUrlTemp'),'DataFactory/datafactory-linkedservice-single-cosmosdb.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "CosmosDbName": {
            "value": "[parameters('CosmosDbName')]"
          },
          "CosmosDbPrimaryKey": {
            "value": "[parameters('cosmosDbKey')]"
          },
          "CosmosDbDatabase": {
            "value": "[variables('CosmosDbDatabaseName')]"
          },
          "DataFactoryName": {
            "value": "[variables('dataFactoryName')]"
          },
          "LinkedServiceName": {
            "value": "providerPortalCosmosDb"
          }
        }
      },
      "dependsOn": [
        "dataFactory2"
      ]
    },
    {
      "name": "providerPortalTableStorage",
      "apiVersion": "2019-05-01",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('dfcDevOpsTemplatesUrlTemp'),'DataFactory/datafactory-linkedservice-table-storage.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "StorageAccountName": {
            "value": "[variables('tableStorageAccountName')]"
          },
          "StorageAccountKey": {
            "value": "[listKeys(variables('tableStorageAccountId'), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]"
          },
          "DataFactoryName": {
            "value": "[variables('dataFactoryName')]"
          },
          "LinkedServiceName": {
            "value": "providerPortalTableStorage"
          }
        }
      },
      "dependsOn": [
        "dataFactory2",
        "TableLinkedStorage"
      ]
    },
    {
      "name": "providerPortalBlobStorage",
      "apiVersion": "2019-05-01",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('dfcDevOpsTemplatesUrlTemp'),'DataFactory/datafactory-linkedservice-blob-storage.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "StorageAccountName": {
            "value": "[variables('blobStorageAccountName')]"
          },
          "StorageAccountKey": {
            "value": "[listKeys(variables('blobStorageAccountId'), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]"
          },
          "DataFactoryName": {
            "value": "[variables('dataFactoryName')]"
          },
          "LinkedServiceName": {
            "value": "providerPortalBlobStorage"
          }
        }
      },
      "dependsOn": [
        "dataFactory2",
        "BlobLinkedStorage"
      ]
    },
    {
      "name": "[concat(variables('dataFactoryName'),'/', 'cosmosDb_Courses')]",
      "type": "Microsoft.DataFactory/factories/datasets",
      "apiVersion":"2018-06-01",
      "location":"[variables('location')]",
      "properties": {
        "linkedServiceName": {
          "referenceName": "providerPortalCosmosDb",
          "type": "LinkedServiceReference"
        },
        "folder": {
          "name": "cosmos"
        },
        "annotations": [],
        "type": "CosmosDbSqlApiCollection",
        "schema": {
          "type": "object",
          "properties": {
            "CourseId": {
              "type": "integer"
            },
            "QualificationCourseTitle": {
              "type": "string"
            },
            "LearnAimRef": {
              "type": "string"
            },
            "NotionalNVQLevelv2": {
              "type": "string"
            },
            "AwardOrgCode": {
              "type": "string"
            },
            "QualificationType": {
              "type": "string"
            },
            "ProviderUKPRN": {
              "type": "integer"
            },
            "CourseDescription": {
              "type": "string"
            },
            "EntryRequirements": {
              "type": "string"
            },
            "WhatYoullLearn": {
              "type": "string"
            },
            "HowYoullLearn": {
              "type": "string"
            },
            "WhatYoullNeed": {
              "type": "string"
            },
            "HowYoullBeAssessed": {
              "type": "string"
            },
            "WhereNext": {
              "type": "string"
            },
            "AdultEducationBudget": {
              "type": "boolean"
            },
            "AdvancedLearnerLoan": {
              "type": "boolean"
            },
            "CourseRuns": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "CourseInstanceId": {
                    "type": "null"
                  },
                  "VenueId": {
                    "type": "null"
                  },
                  "CourseName": {
                    "type": "string"
                  },
                  "ProviderCourseID": {
                    "type": "string"
                  },
                  "DeliveryMode": {
                    "type": "integer"
                  },
                  "FlexibleStartDate": {
                    "type": "boolean"
                  },
                  "StartDate": {
                    "type": "string"
                  },
                  "CourseURL": {
                    "type": "string"
                  },
                  "Cost": {
                    "type": "integer"
                  },
                  "CostDescription": {
                    "type": "string"
                  },
                  "DurationUnit": {
                    "type": "integer"
                  },
                  "DurationValue": {
                    "type": "integer"
                  },
                  "StudyMode": {
                    "type": "integer"
                  },
                  "AttendancePattern": {
                    "type": "integer"
                  },
                  "National": {
                    "type": "null"
                  },
                  "Regions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "RecordStatus": {
                    "type": "integer"
                  },
                  "CreatedDate": {
                    "type": "string"
                  },
                  "CreatedBy": {
                    "type": "null"
                  },
                  "UpdatedDate": {
                    "type": "null"
                  },
                  "UpdatedBy": {
                    "type": "null"
                  },
                  "SubRegions": {
                    "type": "null"
                  },
                  "BulkUploadErrors": {
                    "type": "null"
                  }
                }
              }
            },
            "CourseStatus": {
              "type": "integer"
            },
            "CreatedDate": {
              "type": "string"
            },
            "CreatedBy": {
              "type": "string"
            },
            "UpdatedDate": {
              "type": "string"
            },
            "IsValid": {
              "type": "boolean"
            },
            "UpdatedBy": {
              "type": "string"
            },
            "BulkUploadErrors": {
              "type": "array"
            },
            "LarlessReason": {
              "type": "null"
            }
          }
        },
        "typeProperties": {
          "collectionName": "courses",
          "location": "[variables('location')]"
        }
      },
      "dependsOn": [
        "dataFactory2",
        "providerPortalCosmosDb"
      ]
    }
  ],
  "outputs": {}
}
